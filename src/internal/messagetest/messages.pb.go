// Code generated by protoc-gen-go. DO NOT EDIT.
// source: src/internal/messagetest/messages.proto

/*
Package messagetest is a generated protocol buffer package.

It is generated from these files:
	src/internal/messagetest/messages.proto
	src/internal/messagetest/nopackage.proto

It has these top-level messages:
	Message
	Command
	Event
	NonAxMessage
	NoPackage
*/
package messagetest

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// Message is a protocol buffers message that implements ax.Message.
type Message struct {
	Value string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
}

func (m *Message) Reset()                    { *m = Message{} }
func (m *Message) String() string            { return proto.CompactTextString(m) }
func (*Message) ProtoMessage()               {}
func (*Message) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Message) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Command is a protocol buffers message that implements ax.Command.
type Command struct {
	Value string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
}

func (m *Command) Reset()                    { *m = Command{} }
func (m *Command) String() string            { return proto.CompactTextString(m) }
func (*Command) ProtoMessage()               {}
func (*Command) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Command) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// Event is a protocol buffers message that implements ax.Event.
type Event struct {
	Value string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
}

func (m *Event) Reset()                    { *m = Event{} }
func (m *Event) String() string            { return proto.CompactTextString(m) }
func (*Event) ProtoMessage()               {}
func (*Event) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *Event) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// NonAxMessage is a protocol buffers message that does not implement ax.Message.
type NonAxMessage struct {
	Value string `protobuf:"bytes,1,opt,name=value" json:"value,omitempty"`
}

func (m *NonAxMessage) Reset()                    { *m = NonAxMessage{} }
func (m *NonAxMessage) String() string            { return proto.CompactTextString(m) }
func (*NonAxMessage) ProtoMessage()               {}
func (*NonAxMessage) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *NonAxMessage) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

func init() {
	proto.RegisterType((*Message)(nil), "ax.internal.messagetest.Message")
	proto.RegisterType((*Command)(nil), "ax.internal.messagetest.Command")
	proto.RegisterType((*Event)(nil), "ax.internal.messagetest.Event")
	proto.RegisterType((*NonAxMessage)(nil), "ax.internal.messagetest.NonAxMessage")
}

func init() { proto.RegisterFile("src/internal/messagetest/messages.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 140 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xd2, 0x2a, 0x2e, 0x4a, 0xd6,
	0x4f, 0xac, 0xd0, 0xcf, 0xcc, 0x2b, 0x49, 0x2d, 0xca, 0x4b, 0xcc, 0xd1, 0xcf, 0x4d, 0x2d, 0x2e,
	0x4e, 0x4c, 0x4f, 0x2d, 0x49, 0x2d, 0x2e, 0x81, 0xb1, 0x8b, 0xf5, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2,
	0x85, 0xc4, 0x13, 0x2b, 0xf4, 0x60, 0xea, 0xf4, 0x90, 0xd4, 0x29, 0xc9, 0x73, 0xb1, 0xfb, 0x42,
	0xb8, 0x42, 0x22, 0x5c, 0xac, 0x65, 0x89, 0x39, 0xa5, 0xa9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c,
	0x41, 0x10, 0x0e, 0x48, 0x81, 0x73, 0x7e, 0x6e, 0x6e, 0x62, 0x5e, 0x0a, 0x0e, 0x05, 0xb2, 0x5c,
	0xac, 0xae, 0x65, 0xa9, 0x79, 0x25, 0x38, 0xa4, 0x55, 0xb8, 0x78, 0xfc, 0xf2, 0xf3, 0x1c, 0x2b,
	0xf0, 0xda, 0xe2, 0xc4, 0x1b, 0xc5, 0x8d, 0xe4, 0xaa, 0x24, 0x36, 0xb0, 0xab, 0x8d, 0x01, 0x01,
	0x00, 0x00, 0xff, 0xff, 0x95, 0x6c, 0xf7, 0x11, 0xe3, 0x00, 0x00, 0x00,
}
