// Code generated by protoc-gen-go. DO NOT EDIT.
// source: src/ax/eventsourcing/messages.proto

/*
Package eventsourcing is a generated protocol buffer package.

It is generated from these files:
	src/ax/eventsourcing/messages.proto

It has these top-level messages:
	CommandHandled
	CommandEventsPublished
*/
package eventsourcing

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

// CommandHandled is an event written to an aggregate's stream to indicate
// that a specific command message has been handled.
//
// Handled means that the aggregate command handler has received the message
// and returned a nil error, or a DomainError.
type CommandHandled struct {
	CommandId string `protobuf:"bytes,1,opt,name=command_id,json=commandId" json:"command_id,omitempty"`
}

func (m *CommandHandled) Reset()                    { *m = CommandHandled{} }
func (m *CommandHandled) String() string            { return proto.CompactTextString(m) }
func (*CommandHandled) ProtoMessage()               {}
func (*CommandHandled) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *CommandHandled) GetCommandId() string {
	if m != nil {
		return m.CommandId
	}
	return ""
}

// CommandEventsPublished is an event written to an aggregate's stream to
// indicate that the events produced by a specific command have been published
// via the message transport layer.
type CommandEventsPublished struct {
	CommandId string `protobuf:"bytes,1,opt,name=command_id,json=commandId" json:"command_id,omitempty"`
}

func (m *CommandEventsPublished) Reset()                    { *m = CommandEventsPublished{} }
func (m *CommandEventsPublished) String() string            { return proto.CompactTextString(m) }
func (*CommandEventsPublished) ProtoMessage()               {}
func (*CommandEventsPublished) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *CommandEventsPublished) GetCommandId() string {
	if m != nil {
		return m.CommandId
	}
	return ""
}

func init() {
	proto.RegisterType((*CommandHandled)(nil), "ax.eventsourcing.CommandHandled")
	proto.RegisterType((*CommandEventsPublished)(nil), "ax.eventsourcing.CommandEventsPublished")
}

func init() { proto.RegisterFile("src/ax/eventsourcing/messages.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 138 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x52, 0x2e, 0x2e, 0x4a, 0xd6,
	0x4f, 0xac, 0xd0, 0x4f, 0x2d, 0x4b, 0xcd, 0x2b, 0x29, 0xce, 0x2f, 0x2d, 0x4a, 0xce, 0xcc, 0x4b,
	0xd7, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e, 0x4c, 0x4f, 0x2d, 0xd6, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0x12, 0x48, 0xac, 0xd0, 0x43, 0x51, 0xa0, 0xa4, 0xcf, 0xc5, 0xe7, 0x9c, 0x9f, 0x9b, 0x9b, 0x98,
	0x97, 0xe2, 0x91, 0x98, 0x97, 0x92, 0x93, 0x9a, 0x22, 0x24, 0xcb, 0xc5, 0x95, 0x0c, 0x11, 0x89,
	0xcf, 0x4c, 0x91, 0x60, 0x54, 0x60, 0xd4, 0xe0, 0x0c, 0xe2, 0x84, 0x8a, 0x78, 0xa6, 0x28, 0x99,
	0x73, 0x89, 0x41, 0x35, 0xb8, 0x82, 0x0d, 0x0a, 0x28, 0x4d, 0xca, 0xc9, 0x2c, 0xce, 0x20, 0xa8,
	0xd1, 0x89, 0x3f, 0x8a, 0x17, 0xc5, 0xea, 0x24, 0x36, 0xb0, 0x9b, 0x8c, 0x01, 0x01, 0x00, 0x00,
	0xff, 0xff, 0x0e, 0xe1, 0xf5, 0xae, 0xba, 0x00, 0x00, 0x00,
}
