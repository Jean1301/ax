// Code generated by protoc-gen-go. DO NOT EDIT.
// source: examples/banking/messages/transaction.proto

package messages

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type TransactionStarted struct {
	TransactionId string `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId" json:"transaction_id,omitempty"`
	Cents         int64  `protobuf:"varint,2,opt,name=cents" json:"cents,omitempty"`
	// Types that are valid to be assigned to Details:
	//	*TransactionStarted_Transfer
	Details isTransactionStarted_Details `protobuf_oneof:"details"`
}

func (m *TransactionStarted) Reset()                    { *m = TransactionStarted{} }
func (m *TransactionStarted) String() string            { return proto.CompactTextString(m) }
func (*TransactionStarted) ProtoMessage()               {}
func (*TransactionStarted) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{0} }

type isTransactionStarted_Details interface {
	isTransactionStarted_Details()
}

type TransactionStarted_Transfer struct {
	Transfer *TransactionStarted_TransferDetails `protobuf:"bytes,3,opt,name=transfer,oneof"`
}

func (*TransactionStarted_Transfer) isTransactionStarted_Details() {}

func (m *TransactionStarted) GetDetails() isTransactionStarted_Details {
	if m != nil {
		return m.Details
	}
	return nil
}

func (m *TransactionStarted) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

func (m *TransactionStarted) GetCents() int64 {
	if m != nil {
		return m.Cents
	}
	return 0
}

func (m *TransactionStarted) GetTransfer() *TransactionStarted_TransferDetails {
	if x, ok := m.GetDetails().(*TransactionStarted_Transfer); ok {
		return x.Transfer
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*TransactionStarted) XXX_OneofFuncs() (func(msg proto.Message, b *proto.Buffer) error, func(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error), func(msg proto.Message) (n int), []interface{}) {
	return _TransactionStarted_OneofMarshaler, _TransactionStarted_OneofUnmarshaler, _TransactionStarted_OneofSizer, []interface{}{
		(*TransactionStarted_Transfer)(nil),
	}
}

func _TransactionStarted_OneofMarshaler(msg proto.Message, b *proto.Buffer) error {
	m := msg.(*TransactionStarted)
	// details
	switch x := m.Details.(type) {
	case *TransactionStarted_Transfer:
		b.EncodeVarint(3<<3 | proto.WireBytes)
		if err := b.EncodeMessage(x.Transfer); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("TransactionStarted.Details has unexpected type %T", x)
	}
	return nil
}

func _TransactionStarted_OneofUnmarshaler(msg proto.Message, tag, wire int, b *proto.Buffer) (bool, error) {
	m := msg.(*TransactionStarted)
	switch tag {
	case 3: // details.transfer
		if wire != proto.WireBytes {
			return true, proto.ErrInternalBadWireType
		}
		msg := new(TransactionStarted_TransferDetails)
		err := b.DecodeMessage(msg)
		m.Details = &TransactionStarted_Transfer{msg}
		return true, err
	default:
		return false, nil
	}
}

func _TransactionStarted_OneofSizer(msg proto.Message) (n int) {
	m := msg.(*TransactionStarted)
	// details
	switch x := m.Details.(type) {
	case *TransactionStarted_Transfer:
		s := proto.Size(x.Transfer)
		n += proto.SizeVarint(3<<3 | proto.WireBytes)
		n += proto.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type TransactionStarted_TransferDetails struct {
	FromAccountId string `protobuf:"bytes,1,opt,name=from_account_id,json=fromAccountId" json:"from_account_id,omitempty"`
	ToAccountId   string `protobuf:"bytes,2,opt,name=to_account_id,json=toAccountId" json:"to_account_id,omitempty"`
}

func (m *TransactionStarted_TransferDetails) Reset()         { *m = TransactionStarted_TransferDetails{} }
func (m *TransactionStarted_TransferDetails) String() string { return proto.CompactTextString(m) }
func (*TransactionStarted_TransferDetails) ProtoMessage()    {}
func (*TransactionStarted_TransferDetails) Descriptor() ([]byte, []int) {
	return fileDescriptor1, []int{0, 0}
}

func (m *TransactionStarted_TransferDetails) GetFromAccountId() string {
	if m != nil {
		return m.FromAccountId
	}
	return ""
}

func (m *TransactionStarted_TransferDetails) GetToAccountId() string {
	if m != nil {
		return m.ToAccountId
	}
	return ""
}

// TransactionApproved is an event that occurs when a transaction of any type
// is completed successfully.
type TransactionApproved struct {
	TransactionId string `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId" json:"transaction_id,omitempty"`
}

func (m *TransactionApproved) Reset()                    { *m = TransactionApproved{} }
func (m *TransactionApproved) String() string            { return proto.CompactTextString(m) }
func (*TransactionApproved) ProtoMessage()               {}
func (*TransactionApproved) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{1} }

func (m *TransactionApproved) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

// TransactionDeclined is an event that occurs when a transaction of any type
// is completed without a funds exchange taking place.
type TransactionDeclined struct {
	TransactionId string `protobuf:"bytes,1,opt,name=transaction_id,json=transactionId" json:"transaction_id,omitempty"`
}

func (m *TransactionDeclined) Reset()                    { *m = TransactionDeclined{} }
func (m *TransactionDeclined) String() string            { return proto.CompactTextString(m) }
func (*TransactionDeclined) ProtoMessage()               {}
func (*TransactionDeclined) Descriptor() ([]byte, []int) { return fileDescriptor1, []int{2} }

func (m *TransactionDeclined) GetTransactionId() string {
	if m != nil {
		return m.TransactionId
	}
	return ""
}

func init() {
	proto.RegisterType((*TransactionStarted)(nil), "ax.examples.banking.TransactionStarted")
	proto.RegisterType((*TransactionStarted_TransferDetails)(nil), "ax.examples.banking.TransactionStarted.TransferDetails")
	proto.RegisterType((*TransactionApproved)(nil), "ax.examples.banking.TransactionApproved")
	proto.RegisterType((*TransactionDeclined)(nil), "ax.examples.banking.TransactionDeclined")
}

func init() { proto.RegisterFile("examples/banking/messages/transaction.proto", fileDescriptor1) }

var fileDescriptor1 = []byte{
	// 264 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x91, 0xc1, 0x4a, 0xc3, 0x40,
	0x10, 0x86, 0x4d, 0x8a, 0xda, 0x4e, 0xa9, 0x85, 0xad, 0x87, 0xe0, 0x29, 0x04, 0x94, 0x80, 0x90,
	0x80, 0x1e, 0xbc, 0x78, 0x69, 0xe9, 0xc1, 0x5e, 0xa3, 0x5e, 0x04, 0x29, 0xdb, 0xdd, 0x49, 0x59,
	0x4c, 0x76, 0xc3, 0xee, 0x28, 0x7d, 0x0e, 0x9f, 0x58, 0x4c, 0x6c, 0x5d, 0xaa, 0x87, 0x1e, 0xf7,
	0xdb, 0x6f, 0xfe, 0x19, 0x66, 0xe0, 0x1a, 0x37, 0xbc, 0x6e, 0x2a, 0x74, 0xf9, 0x8a, 0xeb, 0x37,
	0xa5, 0xd7, 0x79, 0x8d, 0xce, 0xf1, 0x35, 0xba, 0x9c, 0x2c, 0xd7, 0x8e, 0x0b, 0x52, 0x46, 0x67,
	0x8d, 0x35, 0x64, 0xd8, 0x84, 0x6f, 0xb2, 0xad, 0x9f, 0xfd, 0xf8, 0xc9, 0x67, 0x08, 0xec, 0xe9,
	0x57, 0x7d, 0x24, 0x6e, 0x09, 0x25, 0xbb, 0x84, 0x33, 0x2f, 0x60, 0xa9, 0x64, 0x14, 0xc4, 0x41,
	0x3a, 0x28, 0x46, 0x1e, 0x5d, 0x48, 0x76, 0x0e, 0xc7, 0x02, 0x35, 0xb9, 0x28, 0x8c, 0x83, 0xb4,
	0x57, 0x74, 0x0f, 0xf6, 0x0c, 0xfd, 0x56, 0x2b, 0xd1, 0x46, 0xbd, 0x38, 0x48, 0x87, 0x37, 0x77,
	0xd9, 0x3f, 0xbd, 0xb3, 0xbf, 0x7d, 0x3b, 0x54, 0xa2, 0x9d, 0x23, 0x71, 0x55, 0xb9, 0x87, 0xa3,
	0x62, 0x17, 0x75, 0xf1, 0x0a, 0xe3, 0xbd, 0x6f, 0x76, 0x05, 0xe3, 0xd2, 0x9a, 0x7a, 0xc9, 0x85,
	0x30, 0xef, 0x9a, 0xbc, 0x39, 0xbf, 0xf1, 0xb4, 0xa3, 0x0b, 0xc9, 0x12, 0x18, 0x91, 0xf1, 0xad,
	0xb0, 0xb5, 0x86, 0x64, 0x76, 0xce, 0x6c, 0x00, 0xa7, 0xb2, 0x8b, 0x4d, 0xee, 0x61, 0xe2, 0xcd,
	0x36, 0x6d, 0x1a, 0x6b, 0x3e, 0x0e, 0x5e, 0xca, 0x5e, 0xf5, 0x1c, 0x45, 0xa5, 0xf4, 0xc1, 0xd5,
	0x33, 0x78, 0xe9, 0x6f, 0x6f, 0xb8, 0x3a, 0x69, 0x0f, 0x77, 0xfb, 0x15, 0x00, 0x00, 0xff, 0xff,
	0x2b, 0x1b, 0xeb, 0x9f, 0xe7, 0x01, 0x00, 0x00,
}
